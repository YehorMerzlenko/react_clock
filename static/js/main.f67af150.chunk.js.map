{"version":3,"sources":["Clock/Clock.jsx","App.js","index.js"],"names":["Clock","props","state","date","Date","this","timerID","setInterval","tick","console","log","prevProps","name","clearInterval","setState","toLocaleTimeString","React","Component","App","isClockVisible","clockName","className","role","aria-label","type","onClick","Math","trunc","random","ReactDOM","render","document","getElementById"],"mappings":"kLAGaA,EAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,KAAM,IAAIC,MAFR,EADrB,qDAME,WAAqB,IAAD,OAGlBC,KAAKC,QAAUC,aAAa,WAFE,EAAKC,OACVC,QAAQC,IAAI,EAAKR,MAAMC,QAI9C,OAZN,gCAeE,SAAmBQ,GACbA,EAAUC,OAASP,KAAKJ,MAAMW,MAEhCH,QAAQC,IACN,qCAA8BC,EAAUC,KAAxC,kBACQP,KAAKJ,MAAMW,SApB3B,kCAyBE,WACEC,cAAcR,KAAKC,WA1BvB,kBA6BE,WACED,KAAKS,SAAS,CACZX,KAAM,IAAIC,SA/BhB,oBAmCE,WACE,OACE,mDACoBC,KAAKH,MAAMC,KAAKY,2BAtC1C,GAA2BC,IAAMC,WC4DlBC,E,kDA3Db,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXiB,gBAAgB,EAChBC,UAAW,GAJI,E,0CAQnB,WAAU,IAAD,OACP,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,eAAf,eAGA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACZhB,KAAKH,MAAMiB,gBAAkB,kBAAC,EAAD,CAAOP,KAAMP,KAAKH,MAAMkB,aAExD,yBACEC,UAAU,YACVC,KAAK,QACLC,aAAW,8BAEX,4BACEC,KAAK,SACLH,UAAU,0BACVI,QAAS,kBAAM,EAAKX,SAAS,CAAEK,gBAAgB,MAHjD,cAQA,4BACEK,KAAK,SACLH,UAAU,yBACVI,QAAS,kBAAM,EAAKX,SAAS,CAAEK,gBAAgB,MAHjD,cAQA,4BACEK,KAAK,SACLH,UAAU,uBACVI,QACE,kBAAM,EAAKX,SAAS,CAAEM,UAAWM,KAAKC,MACpB,IAAhBD,KAAKE,cALX,2B,GAzCIZ,IAAMC,WCCxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f67af150.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }\n\n  componentDidMount() {\n    const showCurrentTime = () => this.tick();\n    const showMessage = ()=> console.log(this.state.date);\n    this.timerID = setInterval (function(){\n      showCurrentTime();\n      showMessage();\n    },1000)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(\n        `The Clock was renamed from ${prevProps.name} `\n        + `to ${this.props.name}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    return (\n      <p>\n        {`Current time: ${this.state.date.toLocaleTimeString()}`}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './Clock/Clock';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClockVisible: true,\n      clockName: 1,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"card text-center\">\n          <div className=\"card-header\">\n            React clock\n          </div>\n          <div className=\"card-body\">\n            <div className=\"card-text\">\n              {this.state.isClockVisible && <Clock name={this.state.clockName} />}\n            </div>\n            <div\n              className=\"btn-group\"\n              role=\"group\"\n              aria-label=\"Basic mixed styles example\"\n            >\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-success\"\n                onClick={() => this.setState({ isClockVisible: true })\n                }\n              >\n                Show Clock\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-danger\"\n                onClick={() => this.setState({ isClockVisible: false })\n                }\n              >\n                Hide Clock\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-info\"\n                onClick={\n                  () => this.setState({ clockName: Math.trunc(\n                    Math.random() * 1000,\n                  ) })\n                }\n              >\n                Set random name\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}